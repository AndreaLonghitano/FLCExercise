--- Acse.y	2019-01-13 11:44:44.513404316 +0100
+++ Original.y	2017-12-12 12:04:19.000000000 +0100
@@ -124,8 +124,6 @@
 %token RETURN
 %token READ
 %token WRITE
-%token SHIP
-%token IN
 
 %token <label> DO
 %token <while_stmt> WHILE
@@ -151,7 +149,7 @@
 %left OR_OP
 %left AND_OP
 %left EQ NOTEQ
-%left LT GT LTEQ GTEQ SHIP IN
+%left LT GT LTEQ GTEQ
 %left SHL_OP SHR_OP
 %left MINUS PLUS
 %left MUL_OP DIV_OP
@@ -572,82 +570,6 @@
                                  (program, exp_r0, $2, SUB);
                         }
                      }
-  /* SHIP é FUNZIONANTE */
-  | exp SHIP exp {
-	t_axe_expression exp;
-	t_axe_label *label=newLabel(program);
-	int reg=getNewRegister(program);
-	$$=create_expression(reg,REGISTER);
-
-	gen_addi_instruction(program,reg,REG_0,0);
-	exp=handle_binary_comparison(program,$1,$3,_EQ_);
-	if (exp.expression_type == IMMEDIATE)
-                               gen_load_immediate(program, exp.value);
-                           else
-                               gen_andb_instruction(program, exp.value,
-                                  exp.value, exp.value, CG_DIRECT_ALL);
-	gen_bne_instruction(program,label,0);
-
-	
-	gen_addi_instruction(program,reg,REG_0,1);
-	exp=handle_binary_comparison(program,$1,$3,_GT_);
-	if (exp.expression_type == IMMEDIATE)
-                               gen_load_immediate(program, exp.value);
-                           else
-                               gen_andb_instruction(program, exp.value,
-                                  exp.value, exp.value, CG_DIRECT_ALL);
-	gen_bne_instruction(program,label,0); // salto se il valore è diverso da 0 quindi $1>$2
-
-	
-	gen_addi_instruction(program,reg,REG_0,-1);
-	
-	assignLabel(program,label);
-	}
-    /* QUESTO NON é FUN>IONANTE MA é SICURAMENTE CORRETTO */
-   | exp IN exp COLON exp
-	%prec IN {
-	t_axe_expression exp1,exp2,exp3;
-	t_axe_label *label=newLabel(program);
-	int reg=getNewRegister(program);
-	$$=create_expression(reg,REGISTER);
-
-	int reg1=getNewRegister(program);
-	int reg2=getNewRegister(program);
-
-	gen_addi_instruction(program,reg,REG_0,0);
-	
-	// verifico se a<b e a>c.. Se è vero il risultato è 0
-	exp1=handle_binary_comparison(program,$1,$3,_LT_);
-	exp2=handle_binary_comparison(program,$1,$5,_GT_);
-	exp3=handle_bin_numeric_op(program, exp1, exp2, ANDL);
-	
-	// non c'è bisogno di resettare nuovamente la PSW perchè l'ultima operazione è un ANDL .. Quindi
-
-	gen_bne_instruction(program,label,0);
-
-	gen_addi_instruction(program,reg,REG_0,1); // risultato 1 se b<=a<=c...
-
-	exp1=handle_binary_comparison(program,$1,$3,_GTEQ_); // greater or equal
-	exp2=handle_binary_comparison(program,$1,$5,_LTEQ_); //a<=c
-	exp3=handle_bin_numeric_op(program,exp1,exp2,ANDL);
-	
-	gen_bne_instruction(program,label,0);
-
-
-	// se sono qui significa che nessuna delle due condizioni precedenti p verificata quindi la semantica gliela do io
-		
-	gen_addi_instruction(program,reg,REG_0,10); // vale 10 altrimenti..
-	
-	
-
-	assignLabel(program,label);
-
-
-	}
-
-	
-	   
-	
 ;
 
 %%
