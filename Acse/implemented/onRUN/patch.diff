--- Acse.y	2018-12-20 10:28:53.276826000 +0100
+++ Original.y	2017-12-12 12:04:19.000000000 +0100
@@ -93,11 +93,6 @@
 extern int yylex(void);
 extern int yyerror(const char* errmsg);
 
-typedef struct t_axe_run {
-t_axe_label *label_run;
-t_axe_label *label_end;
-}t_axe_run;
-
 %}
 %expect 1
 
@@ -113,7 +108,6 @@
    t_list *list;
    t_axe_label *label;
    t_while_statement while_stmt;
-   t_axe_run label_run;
 } 
 /*=========================================================================
                                TOKENS 
@@ -130,12 +124,6 @@
 %token RETURN
 %token READ
 %token WRITE
-%token ON
-%token POS
-%token NOTZERO
-%token NEG
-%token ZERO
-
 
 %token <label> DO
 %token <while_stmt> WHILE
@@ -144,7 +132,6 @@
 %token <intval> TYPE
 %token <svalue> IDENTIFIER
 %token <intval> NUMBER
-%token <label_run> RUN
 
 %type <expr> exp
 %type <decl> declaration
@@ -266,66 +253,8 @@
             | while_statement            { /* does nothing */ }
             | do_while_statement SEMI    { /* does nothing */ }
             | return_statement SEMI      { /* does nothing */ }
-	    | on_zero_statement SEMI
-	    | on_neg_statement SEMI
-	    | on_notzero_statement SEMI
-	    | on_pos_statement SEMI	    
-;
-
-on_zero_statement: ON ZERO RUN {
-			$3.label_run=newLabel(program);
-			$3.label_end=newLabel(program)
-			gen_beq_instruction(program,$3.label_run,0);
-			gen_bt_instruction(program,$3.label_end,0);
-			assignLabel(program,$3.label_run);
-		   }
-		   code_block {
-			assignLabel(program,$3.label_end);
-		   }
-;
-
-on_notzero_statement: ON NOTZERO RUN {
-			$3.label_run=newLabel(program);
-			$3.label_end=newLabel(program)
-			gen_bne_instruction(program,$3.label_run,0);
-			gen_bt_instruction(program,$3.label_end,0);
-			assignLabel(program,$3.label_run);
-		   }
-		   code_block {
-			assignLabel(program,$3.label_end);
-		   }
-;
-
-
-
-on_pos_statement: ON POS RUN {
-			$3.label_run=newLabel(program);
-			$3.label_end=newLabel(program)
-			gen_bpl_instruction(program,$3.label_run,0);
-			gen_bt_instruction(program,$3.label_end,0);
-			assignLabel(program,$3.label_run);
-		   }
-		   code_block {
-			assignLabel(program,$3.label_end);
-		   }
 ;
 
-
-on_neg_statement: ON NEG RUN {
-			$3.label_run=newLabel(program);
-			$3.label_end=newLabel(program)
-			gen_bmi_instruction(program,$3.label_run,0);
-			gen_bt_instruction(program,$3.label_end,0);
-			assignLabel(program,$3.label_run);
-		   }
-		   code_block {
-			assignLabel(program,$3.label_end);
-		   }
-;
-
-
-
-
 read_write_statement : read_statement  { /* does nothing */ }
                      | write_statement { /* does nothing */ }
 ;
