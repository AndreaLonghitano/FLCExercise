--- Original.y	2017-12-12 12:04:19.000000000 +0100
+++ Acse.y	2018-12-21 11:33:59.398987937 +0100
@@ -93,6 +93,14 @@
 extern int yylex(void);
 extern int yyerror(const char* errmsg);
 
+t_axe_label *label_catch=NULL;
+
+typedef struct t_catch_label{
+	t_axe_label *label_catch;
+	t_axe_label *label_end;
+}t_catch_label;
+
+
 %}
 %expect 1
 
@@ -108,6 +116,7 @@
    t_list *list;
    t_axe_label *label;
    t_while_statement while_stmt;
+   t_catch_label t_catch;
 } 
 /*=========================================================================
                                TOKENS 
@@ -123,7 +132,10 @@
 %token FOR
 %token RETURN
 %token READ
-%token WRITE
+%token WRITE	
+%token CATCH
+%token THROW
+%token <t_catch>TRY
 
 %token <label> DO
 %token <while_stmt> WHILE
@@ -247,7 +259,31 @@
             | control_statement          { /* does nothing */ }
             | read_write_statement SEMI  { /* does nothing */ }
             | SEMI            { gen_nop_instruction(program); }
+	    | try_catch_statement SEMI { }
+	    |throw_statement SEMI{}
+;
+
+throw_statement: THROW {
+		   if(label_catch==NULL) notifyError(AXE_INVALID_INSTRUCTION);
+		   else gen_bt_instruction(program,label_catch,0);
+		}
+;
+
+try_catch_statement: TRY {
+			$1.label_catch=newLabel(program);
+			$1.label_end=newLabel(program);
+			label_catch=$1.label_catch;
+		    }
+		    code_block {
+			gen_bt_instruction(program,$1.label_end,0);
+			assignLabel(program,$1.label_catch);
+			label_catch=NULL;
+		   } CATCH code_block {
+			  assignLabel(program,$1.label_end);
+			  label_catch=NULL;
+			}
 ;
+			
 
 control_statement : if_statement         { /* does nothing */ }
             | while_statement            { /* does nothing */ }
