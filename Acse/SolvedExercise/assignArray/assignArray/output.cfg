NOTE : Temporary registers are considered as
       variables of the intermediate language. 
       Variable 'R0' (that refers to the 
       physical register 'RO') is always 
       considered LIVE-IN for each node of 
       a basic block. 
       Thus, in the following control flow graph, 
       'R0' will never appear as LIVE-IN or LIVE-OUT
       variable for a statement.

       If you want to consider 'R0' as
       a normal variable, you have to set
       to 0 the value of the macro CFLOW_ALWAYS_LIVEIN_R0
       defined in "cflow_constants.h".


**************************
     CONTROL FLOW GRAPH   
**************************
NUMBER OF BASIC BLOCKS : 11 
NUMBER OF USED VARIABLES : 28 
--------------------------
START BASIC BLOCK INFOS.  
--------------------------
[BLOCK 1] 
NUMBER OF PREDECESSORS : 0 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 22 
	1.  	MOVA R2 L0 
	2.  	ADDI R3 R0 #0 
	3.  	SHLI R3 R3 #16 
	4.  	ADDI R3 R3 #10 
	5.  	ADD (R2) R0 R3 
	6.  	MOVA R4 L0 
	7.  	ADDI R4 R4 #1 
	8.  	ADDI R5 R0 #0 
	9.  	SHLI R5 R5 #16 
	10.  	ADDI R5 R5 #3 
	11.  	ADD (R4) R0 R5 
	12.  	MOVA R6 L2 
	13.  	ADDI R6 R6 #3 
	14.  	ADDI R7 R0 #0 
	15.  	SHLI R7 R7 #16 
	16.  	ADDI R7 R7 #7 
	17.  	ADD (R6) R0 R7 
	18.  	ADDI R10 R0 #0 
	19.  	ADDI R8 R0 #4 
	20.  	ADDI R9 R0 #2 
	21.  	SUB R11 R8 R9 
	22.  	BEQ L3 
--------------------------
[BLOCK 2] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 1 
	1.  	BMI L4 
--------------------------
[BLOCK 3] 
NUMBER OF PREDECESSORS : 2 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 2 
	1.  L6	SUB R11 R9 R10 
	2.  	BEQ L5 
--------------------------
[BLOCK 4] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 8 
	1.  	MOVA R12 L0 
	2.  	ADD R12 R12 R10 
	3.  	ADD R13 R0 (R12) 
	4.  	MOVA R14 L2 
	5.  	ADD R14 R14 R10 
	6.  	ADD (R14) R0 R13 
	7.  	ADDI R10 R10 #1 
	8.  	BT L6 
--------------------------
[BLOCK 5] 
NUMBER OF PREDECESSORS : 2 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 2 
	1.  L5	SUB R11 R8 R10 
	2.  	BEQ L7 
--------------------------
[BLOCK 6] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 8 
	1.  	MOVA R15 L2 
	2.  	ADD R15 R15 R10 
	3.  	ADDI R16 R0 #0 
	4.  	SHLI R16 R16 #16 
	5.  	ADDI R16 R16 #0 
	6.  	ADD (R15) R0 R16 
	7.  	ADDI R10 R10 #1 
	8.  	BT L5 
--------------------------
[BLOCK 7] 
NUMBER OF PREDECESSORS : 2 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 2 
	1.  L3	SUB R9 R8 R10 
	2.  	BEQ L7 
--------------------------
[BLOCK 8] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 8 
	1.  	MOVA R17 L0 
	2.  	ADD R17 R17 R10 
	3.  	ADD R18 R0 (R17) 
	4.  	MOVA R19 L2 
	5.  	ADD R19 R19 R10 
	6.  	ADD (R19) R0 R18 
	7.  	ADDI R10 R10 #1 
	8.  	BT L3 
--------------------------
[BLOCK 9] 
NUMBER OF PREDECESSORS : 2 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 2 
	1.  L4	SUB R11 R8 R10 
	2.  	BEQ L7 
--------------------------
[BLOCK 10] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 8 
	1.  	MOVA R20 L0 
	2.  	ADD R20 R20 R10 
	3.  	ADD R21 R0 (R20) 
	4.  	MOVA R22 L2 
	5.  	ADD R22 R22 R10 
	6.  	ADD (R22) R0 R21 
	7.  	ADDI R10 R10 #1 
	8.  	BT L4 
--------------------------
[BLOCK 11] 
NUMBER OF PREDECESSORS : 3 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 12 
	1.  L7	MOVA R23 L2 
	2.  	ADD R24 R0 (R23) 
	3.  	WRITE R24 0 
	4.  	MOVA R25 L2 
	5.  	ADDI R25 R25 #1 
	6.  	ADD R26 R0 (R25) 
	7.  	WRITE R26 0 
	8.  	MOVA R27 L2 
	9.  	ADDI R27 R27 #3 
	10.  	ADD R28 R0 (R27) 
	11.  	WRITE R28 0 
	12.  	HALT 
**************************


