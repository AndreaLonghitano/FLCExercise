--- Original.y	2017-12-12 12:04:19.000000000 +0100
+++ Acse.y	2018-12-21 15:26:35.312450000 +0100
@@ -93,6 +93,7 @@
 extern int yylex(void);
 extern int yyerror(const char* errmsg);
 
+
 %}
 %expect 1
 
@@ -124,6 +125,7 @@
 %token RETURN
 %token READ
 %token WRITE
+%token IMPLICIT
 
 %token <label> DO
 %token <while_stmt> WHILE
@@ -137,6 +139,9 @@
 %type <decl> declaration
 %type <list> declaration_list
 %type <label> if_stmt
+%type <expr> exp_implicit 
+
+/* NON SO PERCHE NON FUNZIONA.. LA VARIABILE IMPLICITA COMUNQUE VIENE SCRITTA ALL?INTERNO DELLA SYMBOL TABLE */
 
 /*=========================================================================
                           OPERATOR PRECEDENCES
@@ -179,7 +184,11 @@
          }
 ;
 
-var_declarations : var_declarations var_declaration   { /* does nothing */ }
+var_declarations : var_declarations var_declaration   {
+			t_axe_declaration *declaration=alloc_declaration(strdup("implicit"),0,0,0);
+			t_list *lista=addElement(NULL,declaration,-1);
+			set_new_variables(program,INTEGER_TYPE,lista);
+			}
                  | /* empty */                        { /* does nothing */ }
 ;
 
@@ -247,8 +256,18 @@
             | control_statement          { /* does nothing */ }
             | read_write_statement SEMI  { /* does nothing */ }
             | SEMI            { gen_nop_instruction(program); }
+	    | exp_implicit SEMI {
+
+		int reg_store=get_symbol_location(program,"implicit",0);
+		if($1.expression_type==IMMEDIATE) gen_addi_instruction(program,reg_store,REG_0,gen_load_immediate(program,$1.value));
+		else gen_add_instruction(program,reg_store,REG_0,$1.value,CG_DIRECT_ALL);
+		
+		}
+
 ;
 
+exp_implicit: exp {$$=$1;};  
+
 control_statement : if_statement         { /* does nothing */ }
             | while_statement            { /* does nothing */ }
             | do_while_statement SEMI    { /* does nothing */ }
